
{{#each iconsList}}
import {{name}}_{{theme}} from './icons/{{{category}}}.{{{theme}}}.{{{name}}}';
{{/each}}


export type IconTheme = 'regular' | 'thin' | 'filled' | 'real';

export interface UnthemedIcon {
	regular: Icon;
	thin: Icon;
	filled?: Icon;
	real?: Icon;
}

export interface Icon {
	source: string;
	category: string;
	theme: IconTheme;
	name: string;
}

export type IconCategory ={{#iconCategories}}
	| '{{this}}'{{/iconCategories}};

export type IconName ={{#iconNames}}
	| '{{this}}'{{/iconNames}};

export type IconComponentName ={{#iconComponentNames}}
	| '{{this}}'{{/iconComponentNames}}


export const iconCategories: IconCategory[] = [{{#iconCategories}}
	'{{this}}',{{/iconCategories}}
];

export const iconNames: IconName[] = [{{#iconNames}}
	'{{this}}',{{/iconNames}}
];

export const iconComponentNames: IconComponentName[] = [{{#iconComponentNames}}
	'{{this}}',{{/iconComponentNames}}
];

export interface IconComponents { {{#iconComponentNames}}
	{{this}}: any;{{/iconComponentNames}}
}

export default class XYZIconSet {
	{{#each icons}}
	static {{@key}}: UnthemedIcon = {
		regular: {{#regular}}{{name}}_{{theme}}{{/regular}} as Icon,
		thin: {{#thin}}{{name}}_{{theme}}{{/thin}} as Icon,
	};
	{{/each}}
};
